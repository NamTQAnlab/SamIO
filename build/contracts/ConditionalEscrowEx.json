{
  "contractName": "ConditionalEscrowEx",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_payee",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_payee",
          "type": "address"
        }
      ],
      "name": "withdrawalAllowed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_payee",
          "type": "address"
        }
      ],
      "name": "depositsOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_payee",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "payee",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "weiAmount",
          "type": "uint256"
        }
      ],
      "name": "Deposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "payee",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "weiAmount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_payee",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_payee",
          "type": "address"
        },
        {
          "name": "_RAXTokenWallet",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.4.24;\n\nimport \"./EscrowEx.sol\";\nimport \"./ConditionalEscrow.sol\";\n\n\ncontract ConditionalEscrowEx is ConditionalEscrow, EscrowEx {\n  function withdraw(address _payee, ERC20 _RAXTokenWallet) public {\n    require(withdrawalAllowed(_payee));\n    super.withdraw(_payee, _RAXTokenWallet);\n  }\n}\n",
  "sourcePath": "/home/namtq/MyWorkSpace/SamIO/contracts/zeppelin/contracts/payment/ConditionalEscrowEx.sol",
  "ast": {
    "absolutePath": "/home/namtq/MyWorkSpace/SamIO/contracts/zeppelin/contracts/payment/ConditionalEscrowEx.sol",
    "exportedSymbols": {
      "ConditionalEscrowEx": [
        824
      ]
    },
    "id": 825,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 796,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:8"
      },
      {
        "absolutePath": "/home/namtq/MyWorkSpace/SamIO/contracts/zeppelin/contracts/payment/EscrowEx.sol",
        "file": "./EscrowEx.sol",
        "id": 797,
        "nodeType": "ImportDirective",
        "scope": 825,
        "sourceUnit": 1016,
        "src": "26:24:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/namtq/MyWorkSpace/SamIO/contracts/zeppelin/contracts/payment/ConditionalEscrow.sol",
        "file": "./ConditionalEscrow.sol",
        "id": 798,
        "nodeType": "ImportDirective",
        "scope": 825,
        "sourceUnit": 795,
        "src": "51:33:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 799,
              "name": "ConditionalEscrow",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 794,
              "src": "119:17:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ConditionalEscrow_$794",
                "typeString": "contract ConditionalEscrow"
              }
            },
            "id": 800,
            "nodeType": "InheritanceSpecifier",
            "src": "119:17:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 801,
              "name": "EscrowEx",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1015,
              "src": "138:8:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EscrowEx_$1015",
                "typeString": "contract EscrowEx"
              }
            },
            "id": 802,
            "nodeType": "InheritanceSpecifier",
            "src": "138:8:8"
          }
        ],
        "contractDependencies": [
          763,
          794,
          931,
          1015
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 824,
        "linearizedBaseContracts": [
          824,
          1015,
          794,
          931,
          763
        ],
        "name": "ConditionalEscrowEx",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 822,
              "nodeType": "Block",
              "src": "215:90:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 811,
                            "name": "_payee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 804,
                            "src": "247:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 810,
                          "name": "withdrawalAllowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 775,
                          "src": "229:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "229:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 809,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1339,
                        1340
                      ],
                      "referencedDeclaration": 1339,
                      "src": "221:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "221:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 814,
                  "nodeType": "ExpressionStatement",
                  "src": "221:34:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 818,
                        "name": "_payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 804,
                        "src": "276:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 819,
                        "name": "_RAXTokenWallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 806,
                        "src": "284:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1227",
                          "typeString": "contract ERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20_$1227",
                          "typeString": "contract ERC20"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 815,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1376,
                        "src": "261:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ConditionalEscrowEx_$824",
                          "typeString": "contract super ConditionalEscrowEx"
                        }
                      },
                      "id": 817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1014,
                      "src": "261:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_ERC20_$1227_$returns$__$",
                        "typeString": "function (address,contract ERC20)"
                      }
                    },
                    "id": 820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "261:39:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 821,
                  "nodeType": "ExpressionStatement",
                  "src": "261:39:8"
                }
              ]
            },
            "documentation": null,
            "id": 823,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 807,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 804,
                  "name": "_payee",
                  "nodeType": "VariableDeclaration",
                  "scope": 823,
                  "src": "169:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 803,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "169:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 806,
                  "name": "_RAXTokenWallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 823,
                  "src": "185:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$1227",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 805,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1227,
                    "src": "185:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1227",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "168:39:8"
            },
            "payable": false,
            "returnParameters": {
              "id": 808,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "215:0:8"
            },
            "scope": 824,
            "src": "151:154:8",
            "stateMutability": "nonpayable",
            "superFunction": 1014,
            "visibility": "public"
          }
        ],
        "scope": 825,
        "src": "87:220:8"
      }
    ],
    "src": "0:308:8"
  },
  "legacyAST": {
    "absolutePath": "/home/namtq/MyWorkSpace/SamIO/contracts/zeppelin/contracts/payment/ConditionalEscrowEx.sol",
    "exportedSymbols": {
      "ConditionalEscrowEx": [
        824
      ]
    },
    "id": 825,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 796,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:8"
      },
      {
        "absolutePath": "/home/namtq/MyWorkSpace/SamIO/contracts/zeppelin/contracts/payment/EscrowEx.sol",
        "file": "./EscrowEx.sol",
        "id": 797,
        "nodeType": "ImportDirective",
        "scope": 825,
        "sourceUnit": 1016,
        "src": "26:24:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/namtq/MyWorkSpace/SamIO/contracts/zeppelin/contracts/payment/ConditionalEscrow.sol",
        "file": "./ConditionalEscrow.sol",
        "id": 798,
        "nodeType": "ImportDirective",
        "scope": 825,
        "sourceUnit": 795,
        "src": "51:33:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 799,
              "name": "ConditionalEscrow",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 794,
              "src": "119:17:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ConditionalEscrow_$794",
                "typeString": "contract ConditionalEscrow"
              }
            },
            "id": 800,
            "nodeType": "InheritanceSpecifier",
            "src": "119:17:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 801,
              "name": "EscrowEx",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1015,
              "src": "138:8:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EscrowEx_$1015",
                "typeString": "contract EscrowEx"
              }
            },
            "id": 802,
            "nodeType": "InheritanceSpecifier",
            "src": "138:8:8"
          }
        ],
        "contractDependencies": [
          763,
          794,
          931,
          1015
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 824,
        "linearizedBaseContracts": [
          824,
          1015,
          794,
          931,
          763
        ],
        "name": "ConditionalEscrowEx",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 822,
              "nodeType": "Block",
              "src": "215:90:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 811,
                            "name": "_payee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 804,
                            "src": "247:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 810,
                          "name": "withdrawalAllowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 775,
                          "src": "229:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "229:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 809,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1339,
                        1340
                      ],
                      "referencedDeclaration": 1339,
                      "src": "221:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "221:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 814,
                  "nodeType": "ExpressionStatement",
                  "src": "221:34:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 818,
                        "name": "_payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 804,
                        "src": "276:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 819,
                        "name": "_RAXTokenWallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 806,
                        "src": "284:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1227",
                          "typeString": "contract ERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20_$1227",
                          "typeString": "contract ERC20"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 815,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1376,
                        "src": "261:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ConditionalEscrowEx_$824",
                          "typeString": "contract super ConditionalEscrowEx"
                        }
                      },
                      "id": 817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1014,
                      "src": "261:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_ERC20_$1227_$returns$__$",
                        "typeString": "function (address,contract ERC20)"
                      }
                    },
                    "id": 820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "261:39:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 821,
                  "nodeType": "ExpressionStatement",
                  "src": "261:39:8"
                }
              ]
            },
            "documentation": null,
            "id": 823,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 807,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 804,
                  "name": "_payee",
                  "nodeType": "VariableDeclaration",
                  "scope": 823,
                  "src": "169:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 803,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "169:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 806,
                  "name": "_RAXTokenWallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 823,
                  "src": "185:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$1227",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 805,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1227,
                    "src": "185:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1227",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "168:39:8"
            },
            "payable": false,
            "returnParameters": {
              "id": 808,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "215:0:8"
            },
            "scope": 824,
            "src": "151:154:8",
            "stateMutability": "nonpayable",
            "superFunction": 1014,
            "visibility": "public"
          }
        ],
        "scope": 825,
        "src": "87:220:8"
      }
    ],
    "src": "0:308:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-10-12T08:02:42.775Z"
}